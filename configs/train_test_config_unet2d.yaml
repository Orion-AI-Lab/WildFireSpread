model:
  num_filters:      '[32]'                                           # number of filters in encoder and decoder blocks ( [64, 128, 256] )
  kernel_size:      '(3, 3)'                                         # kernel size (filter size) 3x3, 5x5, should be time, height, width
  pool_size:        '(4, 4)'                                         # downscale time, height, width dimensions
  use_batchnorm:    'True'                                           # normalize after convolution block with ReLU
  final_activation: 'None'                                           # apply activation function in output (nn.Sigmoid), leave null and use in activation in test.py
<<<<<<< HEAD
  checkpoints:      'checkpoints/checkpoints_UNet2D_10days'          # path to save model checkpoints after each epoch # 'checkpoints/checkpoints_UNet2D_10days'
=======
  checkpoints:      'checkpoints/checkpoints_UNet2D_10days'          # path to save model checkpoints after each epoch
>>>>>>> 5cc81dca27ccd19a5c473795056b2402a6b01d43
  threshold:        '0.5'                                            # threshold for metrics calculation in validation set (default 0.5)
  num_layers:       '3'                                              # number of layers inside the convolution blocks
  drop_out_rate:    '0.5'                                            # drop out rate

training: 
<<<<<<< HEAD
  number_of_epochs: '100'           # number of epochs
  batch_size:       '48'            # how many samples will be procesed in one run 
  learing_rate:     '1e-4'          # learning rate

testing:
  #checkpoint_path: 'checkpoints/checkpoints_ViT_10days/model_epoch32.pth'             # path for ViT model best model
  checkpoint_path:   'checkpoints/checkpoints_UNet2D_10days/model_epoch42.pth'         # path for model best model
  #checkpoint_path:  'checkpoints/checkpoints_UNet2D_1day_baseline/model_epoch33.pth'  # path for best baseline model checkpoint
  #save_results_path: 'output/ViT_10days'                                              # path for saving test results (binary predictions and shapefiles) for ViT
  save_results_path: 'output/UNet2D_10days'                                            # path for saving test results (binary predictions and shapefiles)
  #save_results_path: 'output/UNet2D_1day_baseline'                                    # path for saving test results (binary predictions and shapefiles)

=======
  number_of_epochs: '60'            # number of epochs
  batch_size:       '8'             # how many samples will be procesed in one run (not more than 10, it will run out of vram)
  learing_rate:     '1e-4'          # learning rate

testing:
  checkpoint_path:   'checkpoints/checkpoints_UNet2D_10days/model_epoch42.pth'         # path for model best model
  #checkpoint_path:  'checkpoints/checkpoints_UNet2D_1day_baseline/model_epoch33.pth'  # path for best baseline model checkpoint
  save_results_path: 'output/UNet2D_10days'                                            # path for saving test results (binary predictions and shapefiles)
  #save_results_path: 'output/UNet2D_1day_baseline'                                    # path for saving test results (binary predictions and shapefiles)


>>>>>>> 5cc81dca27ccd19a5c473795056b2402a6b01d43
  